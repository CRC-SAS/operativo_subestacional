

##########################
## Set GLOBAL arguments ##
##########################

# Imagen en la que instalar Pycharm
ARG BASE_IMAGE="ghcr.io/fmcarrasco/operativo_subestacional:core-v1.0"

# Set the source code folder
ARG USR_DIRS="/opt/pronos/operativo /opt/pronos/datos /opt/pronos/figuras"

# Set user name and id
ARG USR_NAME="nonroot"
ARG USER_UID="1000"

# Set group name and id
ARG GRP_NAME="nonroot"
ARG USER_GID="1000"

# Set users passwords
ARG ROOT_PWD="root"
ARG USER_PWD=$USR_NAME



###################################
## Stage 6: Create non-root user ##
###################################

# Create image
FROM ${BASE_IMAGE}

# Renew ARGs
ARG USR_DIRS
ARG USR_NAME
ARG USER_UID
ARG GRP_NAME
ARG USER_GID
ARG ROOT_PWD
ARG USER_PWD

# Install OS packages
RUN apt-get -y -qq update && \
    apt-get -y -qq upgrade && \
    apt-get -y -qq --no-install-recommends install \
        # to run sudo
        sudo && \
    rm -rf /var/lib/apt/lists/*

# Modify root password
RUN echo "root:${ROOT_PWD}" | chpasswd

# Create a non-root user, so the container can run as non-root
# OBS: the UID and GID must be the same as the user that own the
# input and the output volumes, so there isn't perms problems!!
# Se recomienda crear usuarios en el contendor de esta manera,
# ver: https://nickjanetakis.com/blog/running-docker-containers-as-a-non-root-user-with-a-custom-uid-and-gid
# Se agregar --no-log-init para prevenir un problema de seguridad,
# ver: https://jtreminio.com/blog/running-docker-containers-as-current-host-user/
RUN groupadd --gid ${USER_GID} ${GRP_NAME}
RUN useradd --no-log-init --uid ${USER_UID} --gid ${USER_GID} --shell /bin/bash \
    --comment "Non-root User Account" --create-home ${USR_NAME}

# Change the owner of the USR_DIRS folder
RUN chown -R ${USR_NAME}:${GRP_NAME} ${USR_DIRS}

# Set permissions of files in USR_DIRS folder
RUN chmod -R ug+rw,o+r ${USR_DIRS}

# Setup cron
RUN count=$(find ${USR_DIRS} -type f -name 'crontab.conf' | wc -l) && [ ${count} = 1 ] \
    && (cat $(find ${USR_DIRS} -type f -name 'crontab.conf')) | crontab -u ${USR_NAME} - \
    || :  # para entender porque :, ver https://stackoverflow.com/a/49348392/5076110

# Modify the password of non-root user
RUN echo "${USR_NAME}:${USER_PWD}" | chpasswd

# Add non-root user to sudoers and to adm group
# The adm group was added to allow non-root user to see logs
RUN usermod -aG sudo ${USR_NAME} && \
    usermod -aG adm ${USR_NAME}



#####################################################
## Usage: Commands to Build and Run this container ##
#####################################################


# CONSTRUIR IMAGEN (NON-ROOT)
# docker build \
#   --tag nonroot-subestacional:latest \
#   --build-arg BASE_IMAGE="ghcr.io/fmcarrasco/operativo_subestacional:core-v1.0" \
#   --build-arg USER_UID=$(stat -c "%u" .) \
#   --build-arg USER_GID=$(stat -c "%g" .) \
#   --file Dockerfile.nonroot .

# CORRER MANUALMENTE
# docker run --rm \
#   --name prono-subestacional \
#   --mount type=bind,source=$(pwd)/datos,target=/opt/pronos/datos \
#   --mount type=bind,source=$(pwd)/figuras,target=/opt/pronos/figuras \
#   --user $(stat -c "%u" .):$(stat -c "%g" .) \
#   --tty --interactive nonroot-subestacional:latest \
#   python run_operativo_20-80.py RSMAS-CCSM4 20250101 pr

# CORRER OPERATIVAMENTE
# docker run --rm \
#   --name prono-subestacional \
#   --mount type=bind,source=$(pwd)/datos,target=/opt/pronos/datos \
#   --mount type=bind,source=$(pwd)/figuras,target=/opt/pronos/figuras \
#   --user $(stat -c "%u" .):$(stat -c "%g" .) \
#   --detach nonroot-subestacional:latest
